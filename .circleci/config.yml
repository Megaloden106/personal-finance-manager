version: 2
jobs:
  install:
    docker:
      - image: circleci/node:10.15.3
    working_directory: ~/repo
    steps:
      - checkout

      - restore_cache:
          key: v2-deps-app-{{ checksum "package-lock.json" }}
      - restore_cache:
          key: v2-deps-client-{{ checksum "client/package-lock.json" }}
      - restore_cache:
          key: v2-deps-server-{{ checksum "server/package-lock.json" }}

      - run: "if [[ ! -e node_modules ]]; then npm ci; fi"
      - run: "if [[ ! -e client/node_modules ]]; then npm run install:client; fi"
      - run: "if [[ ! -e server/node_modules ]]; then npm run install:server; fi"

      - save_cache:
          key: v2-deps-app-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - save_cache:
          key: v2-deps-client-{{ checksum "client/package-lock.json" }}
          paths:
            - client/node_modules
      - save_cache:
          key: v2-deps-server-{{ checksum "server/package-lock.json" }}
          paths:
            - server/node_modules
      - save_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo

  build:
    docker:
      - image: circleci/node:10.15.3
    working_directory: ~/repo
    steps:
      - restore_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}

      - run: git log --pretty=format'%H' -n 1 -- client > client_checksum
      - run: git log --pretty=format'%H' -n 1 -- server > server_checksum

      - restore_cache:
          key: v2-built-client-{{ checksum "client_checksum" }}
      - restore_cache:
          key: v2-built-server-{{ checksum "server_checksum" }}

      - run: "if [[ ! -e public/main.bundle.js ]]; then npm run build:client; fi"
      - run: "if [[ ! -e server/build/index.js ]]; then npm run build:server; fi"

      - save_cache:
          key: v2-built-client-{{ checksum "client_checksum" }}
          paths:
            - public
      - restore_cache:
          key: v2-built-server-{{ checksum "server_checksum" }}
          paths:
            - server/build

  commit:
    docker:
      - image: circleci/node:10.15.3
    working_directory: ~/repo
    steps:
      - restore_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: npm run commit


  lint:
    docker:
      - image: circleci/node:10.15.3
    working_directory: ~/repo
    steps:
      - restore_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: npm run lint


  test:
    docker:
      - image: circleci/node:10.15.3
      - image: postgres:10.5
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: test
    working_directory: ~/repo
    no_output_timeout: 5m
    steps:
      - run: sudo apt update
      - run: sudo apt install -y postgresql-client

      - restore_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}

      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1
      - run: npm run test

workflows:
  version: 2
  install-build-lint:
    jobs:
      - install
      - build:
          requires:
            - install
      - commit:
          requires:
            - install
      - lint:
          requires:
            - install
      - test:
          requires:
            - install